package hu.bme.archi.post.bean;

import java.util.Calendar;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

@BeanDefinition
public class GetPostResponse implements Bean {
    
    @PropertyDefinition
    private String title;
    @PropertyDefinition
    private String description;
    @PropertyDefinition
    private Integer priceMin;
    @PropertyDefinition
    private Integer priceMax;
    @PropertyDefinition
    private String name;
    @PropertyDefinition
    private String phone;
    @PropertyDefinition
    private Calendar creationDateTime;
    @PropertyDefinition
    private String categoryName;
    @PropertyDefinition
    private String postalCode;
    @PropertyDefinition
    private String city;
    @PropertyDefinition
    private double latitude;
    @PropertyDefinition
    private double longitude;
    @PropertyDefinition
    private List<Long> imageIds;
    
    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code GetPostResponse}.
     * @return the meta-bean, not null
     */
    public static GetPostResponse.Meta meta() {
        return GetPostResponse.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(GetPostResponse.Meta.INSTANCE);
    }

    @Override
    public GetPostResponse.Meta metaBean() {
        return GetPostResponse.Meta.INSTANCE;
    }

    @Override
    public <R> Property<R> property(String propertyName) {
        return metaBean().<R>metaProperty(propertyName).createProperty(this);
    }

    @Override
    public Set<String> propertyNames() {
        return metaBean().metaPropertyMap().keySet();
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the title.
     * @return the value of the property
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the title.
     * @param title  the new value of the property
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Gets the the {@code title} property.
     * @return the property, not null
     */
    public final Property<String> title() {
        return metaBean().title().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the description.
     * @return the value of the property
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the description.
     * @param description  the new value of the property
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Gets the the {@code description} property.
     * @return the property, not null
     */
    public final Property<String> description() {
        return metaBean().description().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the priceMin.
     * @return the value of the property
     */
    public Integer getPriceMin() {
        return priceMin;
    }

    /**
     * Sets the priceMin.
     * @param priceMin  the new value of the property
     */
    public void setPriceMin(Integer priceMin) {
        this.priceMin = priceMin;
    }

    /**
     * Gets the the {@code priceMin} property.
     * @return the property, not null
     */
    public final Property<Integer> priceMin() {
        return metaBean().priceMin().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the priceMax.
     * @return the value of the property
     */
    public Integer getPriceMax() {
        return priceMax;
    }

    /**
     * Sets the priceMax.
     * @param priceMax  the new value of the property
     */
    public void setPriceMax(Integer priceMax) {
        this.priceMax = priceMax;
    }

    /**
     * Gets the the {@code priceMax} property.
     * @return the property, not null
     */
    public final Property<Integer> priceMax() {
        return metaBean().priceMax().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the name.
     * @return the value of the property
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name.
     * @param name  the new value of the property
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Gets the the {@code name} property.
     * @return the property, not null
     */
    public final Property<String> name() {
        return metaBean().name().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the phone.
     * @return the value of the property
     */
    public String getPhone() {
        return phone;
    }

    /**
     * Sets the phone.
     * @param phone  the new value of the property
     */
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /**
     * Gets the the {@code phone} property.
     * @return the property, not null
     */
    public final Property<String> phone() {
        return metaBean().phone().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the creationDateTime.
     * @return the value of the property
     */
    public Calendar getCreationDateTime() {
        return creationDateTime;
    }

    /**
     * Sets the creationDateTime.
     * @param creationDateTime  the new value of the property
     */
    public void setCreationDateTime(Calendar creationDateTime) {
        this.creationDateTime = creationDateTime;
    }

    /**
     * Gets the the {@code creationDateTime} property.
     * @return the property, not null
     */
    public final Property<Calendar> creationDateTime() {
        return metaBean().creationDateTime().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the categoryName.
     * @return the value of the property
     */
    public String getCategoryName() {
        return categoryName;
    }

    /**
     * Sets the categoryName.
     * @param categoryName  the new value of the property
     */
    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    /**
     * Gets the the {@code categoryName} property.
     * @return the property, not null
     */
    public final Property<String> categoryName() {
        return metaBean().categoryName().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the postalCode.
     * @return the value of the property
     */
    public String getPostalCode() {
        return postalCode;
    }

    /**
     * Sets the postalCode.
     * @param postalCode  the new value of the property
     */
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    /**
     * Gets the the {@code postalCode} property.
     * @return the property, not null
     */
    public final Property<String> postalCode() {
        return metaBean().postalCode().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the city.
     * @return the value of the property
     */
    public String getCity() {
        return city;
    }

    /**
     * Sets the city.
     * @param city  the new value of the property
     */
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Gets the the {@code city} property.
     * @return the property, not null
     */
    public final Property<String> city() {
        return metaBean().city().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the latitude.
     * @return the value of the property
     */
    public double getLatitude() {
        return latitude;
    }

    /**
     * Sets the latitude.
     * @param latitude  the new value of the property
     */
    public void setLatitude(double latitude) {
        this.latitude = latitude;
    }

    /**
     * Gets the the {@code latitude} property.
     * @return the property, not null
     */
    public final Property<Double> latitude() {
        return metaBean().latitude().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the longitude.
     * @return the value of the property
     */
    public double getLongitude() {
        return longitude;
    }

    /**
     * Sets the longitude.
     * @param longitude  the new value of the property
     */
    public void setLongitude(double longitude) {
        this.longitude = longitude;
    }

    /**
     * Gets the the {@code longitude} property.
     * @return the property, not null
     */
    public final Property<Double> longitude() {
        return metaBean().longitude().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the imageIds.
     * @return the value of the property
     */
    public List<Long> getImageIds() {
        return imageIds;
    }

    /**
     * Sets the imageIds.
     * @param imageIds  the new value of the property
     */
    public void setImageIds(List<Long> imageIds) {
        this.imageIds = imageIds;
    }

    /**
     * Gets the the {@code imageIds} property.
     * @return the property, not null
     */
    public final Property<List<Long>> imageIds() {
        return metaBean().imageIds().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public GetPostResponse clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            GetPostResponse other = (GetPostResponse) obj;
            return JodaBeanUtils.equal(getTitle(), other.getTitle()) &&
                    JodaBeanUtils.equal(getDescription(), other.getDescription()) &&
                    JodaBeanUtils.equal(getPriceMin(), other.getPriceMin()) &&
                    JodaBeanUtils.equal(getPriceMax(), other.getPriceMax()) &&
                    JodaBeanUtils.equal(getName(), other.getName()) &&
                    JodaBeanUtils.equal(getPhone(), other.getPhone()) &&
                    JodaBeanUtils.equal(getCreationDateTime(), other.getCreationDateTime()) &&
                    JodaBeanUtils.equal(getCategoryName(), other.getCategoryName()) &&
                    JodaBeanUtils.equal(getPostalCode(), other.getPostalCode()) &&
                    JodaBeanUtils.equal(getCity(), other.getCity()) &&
                    JodaBeanUtils.equal(getLatitude(), other.getLatitude()) &&
                    JodaBeanUtils.equal(getLongitude(), other.getLongitude()) &&
                    JodaBeanUtils.equal(getImageIds(), other.getImageIds());
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = getClass().hashCode();
        hash = hash * 31 + JodaBeanUtils.hashCode(getTitle());
        hash = hash * 31 + JodaBeanUtils.hashCode(getDescription());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPriceMin());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPriceMax());
        hash = hash * 31 + JodaBeanUtils.hashCode(getName());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPhone());
        hash = hash * 31 + JodaBeanUtils.hashCode(getCreationDateTime());
        hash = hash * 31 + JodaBeanUtils.hashCode(getCategoryName());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPostalCode());
        hash = hash * 31 + JodaBeanUtils.hashCode(getCity());
        hash = hash * 31 + JodaBeanUtils.hashCode(getLatitude());
        hash = hash * 31 + JodaBeanUtils.hashCode(getLongitude());
        hash = hash * 31 + JodaBeanUtils.hashCode(getImageIds());
        return hash;
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(448);
        buf.append("GetPostResponse{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    protected void toString(StringBuilder buf) {
        buf.append("title").append('=').append(JodaBeanUtils.toString(getTitle())).append(',').append(' ');
        buf.append("description").append('=').append(JodaBeanUtils.toString(getDescription())).append(',').append(' ');
        buf.append("priceMin").append('=').append(JodaBeanUtils.toString(getPriceMin())).append(',').append(' ');
        buf.append("priceMax").append('=').append(JodaBeanUtils.toString(getPriceMax())).append(',').append(' ');
        buf.append("name").append('=').append(JodaBeanUtils.toString(getName())).append(',').append(' ');
        buf.append("phone").append('=').append(JodaBeanUtils.toString(getPhone())).append(',').append(' ');
        buf.append("creationDateTime").append('=').append(JodaBeanUtils.toString(getCreationDateTime())).append(',').append(' ');
        buf.append("categoryName").append('=').append(JodaBeanUtils.toString(getCategoryName())).append(',').append(' ');
        buf.append("postalCode").append('=').append(JodaBeanUtils.toString(getPostalCode())).append(',').append(' ');
        buf.append("city").append('=').append(JodaBeanUtils.toString(getCity())).append(',').append(' ');
        buf.append("latitude").append('=').append(JodaBeanUtils.toString(getLatitude())).append(',').append(' ');
        buf.append("longitude").append('=').append(JodaBeanUtils.toString(getLongitude())).append(',').append(' ');
        buf.append("imageIds").append('=').append(JodaBeanUtils.toString(getImageIds())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code GetPostResponse}.
     */
    public static class Meta extends DirectMetaBean {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code title} property.
         */
        private final MetaProperty<String> title = DirectMetaProperty.ofReadWrite(
                this, "title", GetPostResponse.class, String.class);
        /**
         * The meta-property for the {@code description} property.
         */
        private final MetaProperty<String> description = DirectMetaProperty.ofReadWrite(
                this, "description", GetPostResponse.class, String.class);
        /**
         * The meta-property for the {@code priceMin} property.
         */
        private final MetaProperty<Integer> priceMin = DirectMetaProperty.ofReadWrite(
                this, "priceMin", GetPostResponse.class, Integer.class);
        /**
         * The meta-property for the {@code priceMax} property.
         */
        private final MetaProperty<Integer> priceMax = DirectMetaProperty.ofReadWrite(
                this, "priceMax", GetPostResponse.class, Integer.class);
        /**
         * The meta-property for the {@code name} property.
         */
        private final MetaProperty<String> name = DirectMetaProperty.ofReadWrite(
                this, "name", GetPostResponse.class, String.class);
        /**
         * The meta-property for the {@code phone} property.
         */
        private final MetaProperty<String> phone = DirectMetaProperty.ofReadWrite(
                this, "phone", GetPostResponse.class, String.class);
        /**
         * The meta-property for the {@code creationDateTime} property.
         */
        private final MetaProperty<Calendar> creationDateTime = DirectMetaProperty.ofReadWrite(
                this, "creationDateTime", GetPostResponse.class, Calendar.class);
        /**
         * The meta-property for the {@code categoryName} property.
         */
        private final MetaProperty<String> categoryName = DirectMetaProperty.ofReadWrite(
                this, "categoryName", GetPostResponse.class, String.class);
        /**
         * The meta-property for the {@code postalCode} property.
         */
        private final MetaProperty<String> postalCode = DirectMetaProperty.ofReadWrite(
                this, "postalCode", GetPostResponse.class, String.class);
        /**
         * The meta-property for the {@code city} property.
         */
        private final MetaProperty<String> city = DirectMetaProperty.ofReadWrite(
                this, "city", GetPostResponse.class, String.class);
        /**
         * The meta-property for the {@code latitude} property.
         */
        private final MetaProperty<Double> latitude = DirectMetaProperty.ofReadWrite(
                this, "latitude", GetPostResponse.class, Double.TYPE);
        /**
         * The meta-property for the {@code longitude} property.
         */
        private final MetaProperty<Double> longitude = DirectMetaProperty.ofReadWrite(
                this, "longitude", GetPostResponse.class, Double.TYPE);
        /**
         * The meta-property for the {@code imageIds} property.
         */
        @SuppressWarnings({"unchecked", "rawtypes" })
        private final MetaProperty<List<Long>> imageIds = DirectMetaProperty.ofReadWrite(
                this, "imageIds", GetPostResponse.class, (Class) List.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, null,
                "title",
                "description",
                "priceMin",
                "priceMax",
                "name",
                "phone",
                "creationDateTime",
                "categoryName",
                "postalCode",
                "city",
                "latitude",
                "longitude",
                "imageIds");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 110371416:  // title
                    return title;
                case -1724546052:  // description
                    return description;
                case -1176957879:  // priceMin
                    return priceMin;
                case -1176958117:  // priceMax
                    return priceMax;
                case 3373707:  // name
                    return name;
                case 106642798:  // phone
                    return phone;
                case 1501934490:  // creationDateTime
                    return creationDateTime;
                case 426048681:  // categoryName
                    return categoryName;
                case 2011152728:  // postalCode
                    return postalCode;
                case 3053931:  // city
                    return city;
                case -1439978388:  // latitude
                    return latitude;
                case 137365935:  // longitude
                    return longitude;
                case -859622563:  // imageIds
                    return imageIds;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends GetPostResponse> builder() {
            return new DirectBeanBuilder<GetPostResponse>(new GetPostResponse());
        }

        @Override
        public Class<? extends GetPostResponse> beanType() {
            return GetPostResponse.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code title} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> title() {
            return title;
        }

        /**
         * The meta-property for the {@code description} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> description() {
            return description;
        }

        /**
         * The meta-property for the {@code priceMin} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> priceMin() {
            return priceMin;
        }

        /**
         * The meta-property for the {@code priceMax} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> priceMax() {
            return priceMax;
        }

        /**
         * The meta-property for the {@code name} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> name() {
            return name;
        }

        /**
         * The meta-property for the {@code phone} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> phone() {
            return phone;
        }

        /**
         * The meta-property for the {@code creationDateTime} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Calendar> creationDateTime() {
            return creationDateTime;
        }

        /**
         * The meta-property for the {@code categoryName} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> categoryName() {
            return categoryName;
        }

        /**
         * The meta-property for the {@code postalCode} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> postalCode() {
            return postalCode;
        }

        /**
         * The meta-property for the {@code city} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> city() {
            return city;
        }

        /**
         * The meta-property for the {@code latitude} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Double> latitude() {
            return latitude;
        }

        /**
         * The meta-property for the {@code longitude} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Double> longitude() {
            return longitude;
        }

        /**
         * The meta-property for the {@code imageIds} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<List<Long>> imageIds() {
            return imageIds;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 110371416:  // title
                    return ((GetPostResponse) bean).getTitle();
                case -1724546052:  // description
                    return ((GetPostResponse) bean).getDescription();
                case -1176957879:  // priceMin
                    return ((GetPostResponse) bean).getPriceMin();
                case -1176958117:  // priceMax
                    return ((GetPostResponse) bean).getPriceMax();
                case 3373707:  // name
                    return ((GetPostResponse) bean).getName();
                case 106642798:  // phone
                    return ((GetPostResponse) bean).getPhone();
                case 1501934490:  // creationDateTime
                    return ((GetPostResponse) bean).getCreationDateTime();
                case 426048681:  // categoryName
                    return ((GetPostResponse) bean).getCategoryName();
                case 2011152728:  // postalCode
                    return ((GetPostResponse) bean).getPostalCode();
                case 3053931:  // city
                    return ((GetPostResponse) bean).getCity();
                case -1439978388:  // latitude
                    return ((GetPostResponse) bean).getLatitude();
                case 137365935:  // longitude
                    return ((GetPostResponse) bean).getLongitude();
                case -859622563:  // imageIds
                    return ((GetPostResponse) bean).getImageIds();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @SuppressWarnings("unchecked")
        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 110371416:  // title
                    ((GetPostResponse) bean).setTitle((String) newValue);
                    return;
                case -1724546052:  // description
                    ((GetPostResponse) bean).setDescription((String) newValue);
                    return;
                case -1176957879:  // priceMin
                    ((GetPostResponse) bean).setPriceMin((Integer) newValue);
                    return;
                case -1176958117:  // priceMax
                    ((GetPostResponse) bean).setPriceMax((Integer) newValue);
                    return;
                case 3373707:  // name
                    ((GetPostResponse) bean).setName((String) newValue);
                    return;
                case 106642798:  // phone
                    ((GetPostResponse) bean).setPhone((String) newValue);
                    return;
                case 1501934490:  // creationDateTime
                    ((GetPostResponse) bean).setCreationDateTime((Calendar) newValue);
                    return;
                case 426048681:  // categoryName
                    ((GetPostResponse) bean).setCategoryName((String) newValue);
                    return;
                case 2011152728:  // postalCode
                    ((GetPostResponse) bean).setPostalCode((String) newValue);
                    return;
                case 3053931:  // city
                    ((GetPostResponse) bean).setCity((String) newValue);
                    return;
                case -1439978388:  // latitude
                    ((GetPostResponse) bean).setLatitude((Double) newValue);
                    return;
                case 137365935:  // longitude
                    ((GetPostResponse) bean).setLongitude((Double) newValue);
                    return;
                case -859622563:  // imageIds
                    ((GetPostResponse) bean).setImageIds((List<Long>) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
